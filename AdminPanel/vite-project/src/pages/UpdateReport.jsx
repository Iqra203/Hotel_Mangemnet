import React, { useState, useEffect } from 'react';
import { TextField, Button, Container, Typography, Paper, Grid, Box } from '@mui/material';
import axios from 'axios';
import { useParams, useNavigate, Outlet } from 'react-router-dom';
import Sidebar from "../components/Sidebar";
import Topbar from "../components/Topbar";

const UpdateReport = () => {
  const [report, setReport] = useState({
    reportName: '',
    description: '',
    data: '',
    generatedBy: '',
    status: 'pending',
  });
  
  const { id } = useParams(); 
  const navigate = useNavigate();

 
  useEffect(() => {
    const fetchReport = async () => {
        try {
          const response = await axios.get(`http://localhost:5000/api/reports/${id}`); // Add the '/'
          setReport(response.data);
        } catch (error) {
          console.error('Error fetching report:', error);
        }
      };

    fetchReport();
  }, [id]);

  
  const handleChange = (e) => {
    const { name, value } = e.target;
    setReport({
      ...report,
      [name]: value,
    });
  };

  // updating the report
  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      await axios.put(`http://localhost:5000/api/reports/${id}`, report);
      alert('Report updated successfully');
      navigate('/reports-list'); 
    } catch (error) {
      console.error('Error updating report:', error);
    }
  };

  

  return (
    <Box sx={{ display: "flex" }}>
      <Sidebar />
      <Box sx={{ flexGrow: 1, bgcolor: "#fff", minHeight: "100vh" }}>
        <Topbar />
        <Box sx={{ p: 3 }}>
        <Container maxWidth="sm" sx={{ mt: 5 }}>
      <Paper elevation={3} sx={{ padding: 3 }}>
        <Typography variant="h4" gutterBottom color="#ff9800">
          Update Report
        </Typography>
        <form onSubmit={handleSubmit}>
          <Grid container spacing={3}>
            <Grid item xs={12}>
              <TextField
                label="Report Name"
                variant="outlined"
                fullWidth
                name="reportName"
                value={report.reportName}
                onChange={handleChange}
                required
                sx={{ mb: 2 }}
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Description"
                variant="outlined"
                fullWidth
                name="description"
                value={report.description}
                onChange={handleChange}
                sx={{ mb: 2 }}
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Data (JSON)"
                variant="outlined"
                fullWidth
                name="data"
                value={report.data}
                onChange={handleChange}
                required
                sx={{ mb: 2 }}
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Generated By"
                variant="outlined"
                fullWidth
                name="generatedBy"
                value={report.generatedBy}
                onChange={handleChange}
                required
                sx={{ mb: 2 }}
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Status"
                variant="outlined"
                fullWidth
                name="status"
                value={report.status}
                onChange={handleChange}
                required
                sx={{ mb: 2 }}
              />
            </Grid>
            <Grid item xs={12}>
              <Button type="submit" variant="contained" fullWidth color="primary" sx={{ backgroundColor: '#ff9800' }}>
                Update Report
              </Button>
            </Grid>
          </Grid>
        </form>
      </Paper>
    </Container>
          <Outlet />
        </Box>
      </Box>
    </Box>
  );
};


export default UpdateReport;
